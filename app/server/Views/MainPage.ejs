<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Used Car App</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background-color: #f9f9f9;
      margin: 0;
      padding: 0;
    }

    /* Header rowÔºölogo + search + login */
    .top-bar {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 20px 40px;
      background-color: #fff;
      border-bottom: 1px solid #eee;
    }

    .page-title {
      font-size: 24px;
      font-weight: bold;
      color: #007bff;
    }

    .search-input {
      width: 300px;
      padding: 10px 16px;
      border-radius: 20px;
      border: 1px solid #ccc;
      font-size: 14px;
      outline: none;
    }

    .login-button {
      padding: 8px 16px;
      background-color: #007bff;
      color: white;
      text-decoration: none;
      border-radius: 6px;
      font-size: 14px;
    }

    .login-button:hover {
      background-color: #0056b3;
    }

    /* Tag buttons */
    .tag-bar {
      text-align: center;
      padding: 10px 0 20px;
      background-color: #f5f5f5;
      border-bottom: 1px solid #eee;
    }

    .tag {
      background-color: #eee;
      border: none;
      margin: 5px 8px;
      padding: 6px 14px;
      border-radius: 20px;
      font-size: 13px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .tag:hover {
      background-color: #ddd;
    }

    .container {
      max-width: 1200px;
      margin: 40px auto;
      padding: 20px;
    }

    .hero-image {
      position: relative;
      width: 100%;
      border-radius: 10px;
      overflow: hidden;
    }

    .hero-image img {
      width: 100%;
      display: block;
    }

    .hero-text {
      position: absolute;
      bottom: 20px;
      left: 30px;
      color: white;
      font-size: 28px;
      font-weight: bold;
      text-shadow: 2px 2px 6px rgba(0, 0, 0, 0.6);
    }

    .car-section {
      margin-top: 60px;
    }

    .car-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 30px;
    }

    .car-card {
      background-color: #fff;
      border: 1px solid #ccc;
      border-radius: 10px;
      padding: 20px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      text-align: left;
    }

    .car-card h3 {
      margin-top: 0;
      font-size: 18px;
      color: #007bff;
    }

    .car-card p {
      margin: 8px 0;
      font-size: 14px;
    }
  </style>
</head>
<body>

  <!-- Header: Logo + Search + Login -->
  <div class="top-bar">
    <div class="page-title">Used Car App</div>
    <input id="searchInput" type="text" placeholder="Search by title, year, or price..." class="search-input" />
    <a href="/user/profile" id="profilebtn" style="width: 30px; height: 30px; display: block;">
      <img src="/images/personal.png" alt="Profile" style="width: 100%; height: 100%; object-fit: cover; border-radius: 9999px;" />
    </a>
    <div id="authSection"></div>
  </div>

  <!-- Tag Buttons -->
  <div class="tag-bar">
    <button class="tag">üõû BMW</button>
    <button class="tag">üí∞ Benz</button>
    <button class="tag">üèéÔ∏è Ferrari</button>
    <button class="tag">üöò Porsche</button>
    <button class="tag">üöô Toyota</button>
  </div>

  <!-- Main Content -->
  <div class="container">

    <!-- Hero image -->
    <div class="hero-image">
      <img src="/images/main.jpg" alt="Hero Car">
      <div class="hero-text">Trusted Cars, Better Journeys</div>
    </div>

    <!-- Car Cards -->
    <div class="car-section">
      <h2 style="text-align:left; color:#333;">Latest Listings</h2>
      <div id="carGrid" class="car-grid"></div>
    </div>

  </div>

  <!-- JS Script -->
  <script>
    let allCars = [];

    window.addEventListener('DOMContentLoaded', async () => {
      const container = document.getElementById('carGrid');
      const input = document.getElementById('searchInput');
      const tags = document.querySelectorAll('.tag');

      try {
        const response = await fetch('/car');
        const cars = await response.json();
        allCars = cars;
        renderCars(cars);
      } catch (err) {
        container.innerHTML = '<p>Failed to load car data.</p>';
        console.error('Error fetching cars:', err);
      }

      async function checkSessionAndRenderAuth() {
        console.log('Here')
        const authSection = document.getElementById('authSection');
        try {
          const res = await fetch('/session');
          const result = await res.json();

          console.log(result)

          if (result.loggedIn) {
            authSection.innerHTML = `
            <a href="/user/logout" class="button">Sign Out</a>`;
          } else {
            authSection.innerHTML = `
              <a href="/user/login" class="login-button">Login/Register</a>`;
          }
        } catch (err) {
          console.error('Error checking session:', err);
          authSection.innerHTML = `
            <a href="/user/login" class="login-button">Login/Register</a>`;
        }
      }


      // Input ÊêúÂ∞ã
      input.addEventListener('input', () => {
        const keyword = input.value.trim().toLowerCase();
        filterAndRender(keyword);
      });

      // ÈªûÊìä tag button ÊêúÂ∞ã
      tags.forEach(tag => {
        tag.addEventListener('click', () => {
          const keyword = tag.innerText.replace(/[^a-zA-Z0-9]/g, '').toLowerCase(); // Âéª emoji
          input.value = keyword;
          filterAndRender(keyword);
        });
      });

      checkSessionAndRenderAuth();
    });

    function filterAndRender(keyword) {
      const filtered = allCars.filter(car =>
        car.CarTitle.toLowerCase().includes(keyword) ||
        car.ManufactureYear?.toString().includes(keyword) ||
        car.CarPrice?.toString().includes(keyword)
      );
      renderCars(filtered);
    }

    function renderCars(cars) {
      const container = document.getElementById('carGrid');
      container.innerHTML = '';

      if (cars.length === 0) {
        container.innerHTML = '<p style="text-align:center;">No cars found.</p>';
        return;
      }

      cars.forEach(car => {
        const card = document.createElement('div');
        card.className = 'car-card';

        card.innerHTML = `
          <h3>${car.CarTitle}</h3>
          <p><strong>Price:</strong> $${Number(car.CarPrice).toLocaleString()}</p>
          <p><strong>Year:</strong> ${car.ManufactureYear || 'N/A'}</p>
        `;

        container.appendChild(card);
      });
    }
  </script>

</body>
</html>
