<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="/bootstrap/js/bootstrap.bundle.min.js" defer></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <title><%= car.CarTitle %> Details</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      line-height: 1.6;
      margin: 0;
      padding: 20px;
      color: #333;
    }
    /* Layout for top half: car info + price trend side by side */
    .top-container {
    display: flex;
    justify-content: space-between;
    max-width: 1200px;
    margin: 40px auto;
    gap: 30px;
    }

    /* Car Info Section (Left Side) */
    .car-info {
    flex: 1;
    }

    .car-title {
    margin-bottom: 5px;
    color: #2c3e50;
    font-size: 28px;
    }

    .car-subtitle {
    color: #7f8c8d;
    margin-top: 0;
    font-style: italic;
    font-size: 16px;
    }

    .car-details {
    background-color: #f9f9f9;
    padding: 25px;
    border-radius: 8px;
    margin-top: 20px;
    }

    .car-details p {
    margin: 12px 0;
    font-size: 15px;
    }

    /* Price Trend Chart (Right Side) */
    .trend-section {
    flex: 1;
    background-color: #f8f9fa;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    height: fit-content;
    }

    /* Rating Section (Bottom) */
    .rating-section {
    max-width: 1000px;
    margin: 60px auto;
    padding: 30px;
    background-color: #f8f9fa;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .rating-container {
    padding: 20px;
    }

    .rating-header {
    font-size: 20px;
    font-weight: bold;
    margin-bottom: 20px;
    text-align: center;
    color: #2c3e50;
    }

    .rating-item {
    margin-bottom: 25px;
    }

    .rating-title {
    font-weight: bold;
    margin-bottom: 8px;
    display: flex;
    justify-content: space-between;
    }

    .rating-stars {
    display: flex;
    justify-content: space-between;
    font-size: 24px;
    }

    .star {
    color: #ddd;
    cursor: pointer;
    transition: all 0.2s;
    flex: 1;
    text-align: center;
    }

    .star:hover,
    .star.active {
    color: #ffcc00;
    transform: scale(1.2);
    }

    .rating-result {
    text-align: right;
    font-size: 14px;
    color: #7f8c8d;
    margin-top: 5px;
    }

    .overall-rating {
    background-color: #e9f7fe;
    padding: 15px;
    border-radius: 8px;
    margin-top: 30px;
    }

    .submit-rating {
    display: block;
    width: 100%;
    padding: 12px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    margin-top: 20px;
    transition: background-color 0.3s;
    }

    .submit-rating:hover {
    background-color: #45a049;
    }

    .submit-rating:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
    }
</style>
<link rel="stylesheet" href="/CSS/topbar.css">
</head>
<body>
  <%- include('partials/topbar') %>
  <!-- üß≠ Top container: car info + trend side by side -->
  <div class="top-container">
    <!-- üöó Car info on the left -->
    <div class="car-info">
      <h1 class="car-title"><%= car.CarTitle %></h1>
      <p class="car-subtitle"><%= car.CarSubTitle %></p>

      <div class="car-details">
        <p><strong>Price:</strong> $<%= car.CarPrice.toLocaleString() %></p>
        <p><strong>Year:</strong> <%= car.ManufactureYear %></p>
        <p><strong>Body Type:</strong><%= car.BodyType ? car.BodyType.charAt(0).toUpperCase() + car.BodyType.slice(1) : 'N/A' %></p>
        <p><strong>Mileage:</strong> <%= typeof car.Mileage === 'number' ? car.Mileage.toLocaleString() : 'N/A' %>miles</p>
        <p><strong>Engine:</strong> <%= car.EngineVolume %>L <%= car.EngineVolume >= 3.0 ? 'V8' : 'V6' %></p>
        <p><strong>Transmission:</strong> <%= car.TransmissionType ? car.TransmissionType.charAt(0).toUpperCase() + car.TransmissionType.slice(1) : 'N/A' %></p>
        <p><strong>Fuel Type:</strong> <%= car.FuelType ? car.FuelType.charAt(0).toUpperCase() + car.FuelType.slice(1) : 'N/A' %></p>
        <p><strong>Previous Owners:</strong> <%= car.TotalPreviousOwners %></p>
        <% if (car.UserId) { %>
          <p><strong>Listed by:</strong> User #<%= car.UserId %></p>
        <% } %>
      </div>
    </div>

    <!-- üìà Price trend on the right -->
    <div class="trend-section">
      <h2>Price Trend for "<%= car.Make + ' ' + car.Model %>"</h2>
      <canvas id="trendChart" height="300"></canvas>
    </div>
  </div>

  <!-- ‚≠ê Rating at the bottom -->
  <div class="rating-section">
    <div class="rating-container">
      <div class="rating-header">Rate This Car</div>

      <% ['exterior', 'interior', 'rideQuality'].forEach(function(cat) { %>
        <div class="rating-item">
          <div class="rating-title">
            <span><%= cat.charAt(0).toUpperCase() + cat.slice(1).replace('Quality', ' Quality') %></span>
            <span id="<%= cat %>Result">(Not rated)</span>
          </div>
          <div class="rating-stars" id="<%= cat %>Rating">
            <% for(let i=1; i<=5; i++) { %>
              <span class="star" data-rating="<%= i %>" data-category="<%= cat %>">‚òÖ</span>
            <% } %>
          </div>
        </div>
      <% }); %>
      <div class="rating-item overall-rating">
        <div class="rating-title">
          <span>Overall</span>
          <span id="overallResult">(Not rated)</span>
        </div>
        <div class="rating-stars" id="overallRating">
          <% for(let i=1; i<=5; i++) { %>
            <span class="star" data-rating="<%= i %>" data-category="overall">‚òÖ</span>
          <% } %>
        </div>
      </div>      
      

      <button id="submitRatings" class="submit-rating" disabled>Submit Ratings</button>
    </div>
  </div>
  <%- include('partials/footer') %>
  <!-- JS Script -->
  <script src="/JS/auth.js"></script>

  <!-- Load Chart.js (put this BEFORE you use 'Chart') -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const ratingCategories = {
        exterior: { element: null, result: null, value: null },
        interior: { element: null, result: null, value: null },
        rideQuality: { element: null, result: null, value: null },
        overall: { element: null, result: null, value: null }
      };
      
      const submitButton = document.getElementById('submitRatings');
      
      // ÂàùÂßãÂåñÊØè‰∏™ËØÑÂàÜÁªÑ‰ª∂
      Object.keys(ratingCategories).forEach(category => {
        ratingCategories[category].element = document.getElementById(`${category}Rating`);
        ratingCategories[category].result = document.getElementById(`${category}Result`);
        
        const stars = ratingCategories[category].element.querySelectorAll('.star');
        
        stars.forEach(star => {
          star.addEventListener('click', function() {
            const rating = parseInt(this.getAttribute('data-rating'));
            ratingCategories[category].value = rating;
            
            // Êõ¥Êñ∞ÊòüÊòüÊ†∑Âºè
            stars.forEach((s, index) => {
              if (index < rating) {
                s.classList.add('active');
              } else {
                s.classList.remove('active');
              }
            });
            
            // ÊòæÁ§∫ËØÑÂàÜÁªìÊûú
            ratingCategories[category].result.textContent = `${rating}/5`;
            
            // Ê£ÄÊü•ÊòØÂê¶ÊúâËá≥Â∞ë‰∏Ä‰∏™ËØÑÂàÜÔºåÂêØÁî®Êèê‰∫§ÊåâÈíÆ
            checkRatings();
          });
          
          // Èº†Ê†áÊÇ¨ÂÅúÊïàÊûú
          star.addEventListener('mouseover', function() {
            const hoverRating = parseInt(this.getAttribute('data-rating'));
            stars.forEach((s, index) => {
              s.style.color = index < hoverRating ? '#ffcc00' : '#ddd';
            });
          });
          
          star.addEventListener('mouseout', function() {
            const currentRating = ratingCategories[category].value;
            stars.forEach((s, index) => {
              s.style.color = (currentRating !== null && index < currentRating) ? '#ffcc00' : '#ddd';
            });
          });
        });
      });

      // Ê£ÄÊü•ÊòØÂê¶ÊúâËá≥Â∞ë‰∏Ä‰∏™ËØÑÂàÜ
      function checkRatings() {
        const hasRating = Object.values(ratingCategories).some(
          category => category.value !== null
        );
        submitButton.disabled = !hasRating;
      }

      // Êèê‰∫§ÊâÄÊúâËØÑÂàÜ
      submitButton.addEventListener('click', function() {
        const ratingsData = {
          carId: '<%= car.CarId %>',
          ratings: {
            CarTitle: '<%= car.CarTitle %>' ,
            Price: '<%= car.CarPrice %>' ,
            ExteriorRating: ratingCategories.exterior.value,
            InteriorRating: ratingCategories.interior.value,
            RideQuality: ratingCategories.rideQuality.value,
            OverallRating: ratingCategories.overall.value
          },
          timestamp: new Date().toISOString()
        };
        //console.log(ratingsData);
        fetch('/rating', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(ratingsData)
        })
        .then(response => response.json())
        .then(data => {
          console.log('All ratings saved:', data);
          alert('Thank you for your ratings!');
        })
        .catch(error => {
          console.error('Error saving ratings:', error);
          alert('Failed to submit ratings. Please try again.');
        });
      });
    });
    
    document.addEventListener('DOMContentLoaded', function () {
        const trendData = <%- JSON.stringify(trend) %>;
        console.log('Trend Data:', trendData); // ‚úÖ check here

        if (trendData.length > 0) {
            const ctx = document.getElementById('trendChart').getContext('2d');
            new Chart(ctx, {
            type: 'line',
            data: {
                labels: trendData.map(d => d.ManufactureYear),
                datasets: [{
                label: 'Avg Price (USD)',
                data: trendData.map(d => d.AvgPrice),
                borderColor: '#007bff',
                fill: false,
                tension: 0.3
                }]
            },
            options: {
                responsive: true,
                scales: {
                x: {
                    title: { display: true, text: 'Year' }
                },
                y: {
                    title: { display: true, text: 'Avg Price' }
                }
                }
            }
            });
        } else {
            console.log('No trend data available');
        }
        });
  
  </script>
</body>
</html>